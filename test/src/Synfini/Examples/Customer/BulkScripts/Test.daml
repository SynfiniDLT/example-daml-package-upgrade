-- Copyright (c) 2023 ASX Operations Pty Ltd. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Synfini.Examples.Customer.BulkScripts.Test where

import Daml.Script
import qualified Synfini.Examples.Customer.BulkScripts as Scripts
import qualified Synfini.Examples.Customer.V1 as V1
import qualified Synfini.Examples.Customer.V2 as V2

withSetup : (Party -> Script a) -> Script ()
withSetup test = do
  operator <- allocateParty "operator"
  test operator
  pure ()

test_generate_contracts : Script ()
test_generate_contracts = withSetup $ \operator -> do
  let numContracts = 10
  Scripts.generateBulk Scripts.GenerateBulkInput with
    operator
    entropy = "abc"
    numContracts
    batchSize = 3
  v1Contracts <- query @V1.Customer operator
  v2Contracts <- query @V2.Customer operator
  assertMsg "Must have correct number of v1 contracts" (length v1Contracts == numContracts)
  assertMsg "Must have no v2 contracts" (length v2Contracts == 0)
  let numContracts' = 8
  Scripts.generateBulk Scripts.GenerateBulkInput with
    operator
    entropy = "abc2"
    numContracts = numContracts'
    batchSize = 8
  v1Contracts' <- query @V1.Customer operator
  v2Contracts' <- query @V2.Customer operator
  assertMsg
    "Must have correct number of v1 contracts after generating more"
    (length v1Contracts' == numContracts + numContracts')
  assertMsg "Must have no v2 contracts after generating more" (length v2Contracts' == 0)

test_generate_contracts_without_key : Script ()
test_generate_contracts_without_key = withSetup $ \operator -> do
  let numContracts = 10
  Scripts.generateBulkWithoutKey Scripts.GenerateBulkInputWithoutKey with
    operator
    numContracts
    batchSize = 3
    outputBatchSize = 3
  v1Contracts <- query @V1.CustomerWithoutKey operator
  v2Contracts <- query @V2.Customer operator
  assertMsg "Must have correct number of v1 contracts" (length v1Contracts == numContracts)
  assertMsg "Must have no v2 contracts" (length v2Contracts == 0)

test_upgrade_contracts : Script ()
test_upgrade_contracts = withSetup $ \operator -> do
  let entropy = "abc"
      numContracts = 30
  Scripts.generateBulk Scripts.GenerateBulkInput with
    operator
    entropy
    numContracts
    batchSize = 5
  Scripts.upgradeBulk Scripts.UpgradeBulkInput with
    operator
    entropy
    numContracts
    batchSize = 11
  v1Contracts <- query @V1.Customer operator
  v2Contracts <- query @V2.Customer operator
  assertMsg "Must no v1 contracts" (length v1Contracts == 0)
  assertMsg "Must have correct number of v2 contracts" (length v2Contracts == numContracts)

test_upgrade_contracts_without_key : Script ()
test_upgrade_contracts_without_key = withSetup $ \operator -> do
  let numContracts = 30
  upgradeInput <- Scripts.generateBulkWithoutKey Scripts.GenerateBulkInputWithoutKey with
    operator
    numContracts
    batchSize = 5
    outputBatchSize = 5
  Scripts.upgradeBulkWithoutKey upgradeInput
  v1Contracts <- query @V1.CustomerWithoutKey operator
  v2Contracts <- query @V2.CustomerWithoutKey operator
  assertMsg "Must no v1 contracts" (length v1Contracts == 0)
  assertMsg "Must have correct number of v2 contracts" (length v2Contracts == numContracts)
